<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bufio on zhaolion&#39;s knowledge dropbox</title>
    <link>https://blog.zhaolion.dev/tags/bufio/</link>
    <description>Recent content in bufio on zhaolion&#39;s knowledge dropbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 13 Oct 2018 21:54:10 +0800</lastBuildDate><atom:link href="https://blog.zhaolion.dev/tags/bufio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>初步了解 golang bufio pkg</title>
      <link>https://blog.zhaolion.dev/post/golang/package/bufio/</link>
      <pubDate>Sat, 13 Oct 2018 21:54:10 +0800</pubDate>
      
      <guid>https://blog.zhaolion.dev/post/golang/package/bufio/</guid>
      <description>bufio package in Golang golang 通过 package bufio 来支持 buffered I/O。
熟悉一下: Reader, Writer and Scanner…
bufio.Writer 对 I/O 的频繁操作会极大的影响性能，每次 写 I/O 都是一次 syscall，因此频繁操作会给 CPU 带来极大的负担。对于磁盘来说，批量写操作有着更好的性能。golang 通过 bufio.Writer 来合并写操作，避免频繁的写操作。因此在写密集场景下，应该使用 bufio.Writer，而不是 io.Writer
bufio.Writer 通过将写内容缓存至 buffer，buffer 满了之后，再进行一次写操作，这样极大的优化性能:
producer --&amp;gt; buffer --&amp;gt; io.Writer 举个例子，9 次写操作，buffer 是如何工作的:
producer buffer destination (io.Writer) a -----&amp;gt; a b -----&amp;gt; ab c -----&amp;gt; abc d -----&amp;gt; abcd e -----&amp;gt; e ------&amp;gt; abcd f -----&amp;gt; ef abcd g -----&amp;gt; efg abcd h -----&amp;gt; efgh abcd i -----&amp;gt; i ------&amp;gt; abcdefgh 看份代码来感受一下，如何使用:</description>
    </item>
    
  </channel>
</rss>
